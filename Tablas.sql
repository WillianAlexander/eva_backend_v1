CREATE TABLE EVA.ROLES (
    ID INTEGER GENERATED ALWAYS AS IDENTITY UNIQUE,
    DESCRIPCION VARCHAR(50) NOT NULL,
    FHASTA TIMESTAMP DEFAULT '2999-12-31 00:00:00',
    FDESDE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY (ID, FHASTA)
);

ALTER TABLE IF EXISTS EVA.ROLES
    OWNER to postgres;

INSERT INTO EVA.ROLES (DESCRIPCION) VALUES ('ADMIN');
INSERT INTO EVA.ROLES (DESCRIPCION) VALUES ('PARTICIPANTE');

CREATE TABLE EVA.USUARIOS (
    USUARIO VARCHAR(50) NOT NULL UNIQUE,
    NOMBRES VARCHAR(100) NOT NULL,
    APELLIDOS VARCHAR(100) NOT NULL,
    IDENTIFICACION VARCHAR(30) NOT NULL,
    CORREO VARCHAR(100) NOT NULL,
    ROL_ID INTEGER REFERENCES EVA.ROLES(ID),
	DEPARTAMENTO_ID INTEGER REFERENCES EVA.DEPARTAMENTOS(id),
    ESTADO_USUARIO VARCHAR(5) NOT NULL DEFAULT 'ACT',
    FHASTA TIMESTAMP NOT NULL DEFAULT '2999-12-31 00:00:00',
    FDESDE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    VERSION INTEGER NOT NULL DEFAULT 0,
	CONSTRAINT ESTD_USER CHECK (ESTADO_USUARIO IN ('ACT', 'INA')),
    PRIMARY KEY (usuario, fhasta)
);


ALTER TABLE IF EXISTS EVA.USUARIOS
    OWNER to postgres;

CREATE TABLE EVA.DEPARTAMENTOS (
    ID INTEGER GENERATED ALWAYS AS IDENTITY UNIQUE,
    NOMBRE VARCHAR(100) NOT NULL UNIQUE,
    FHASTA TIMESTAMP DEFAULT '2999-12-31 00:00:00',
    FDESDE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	VERSION INTEGER NOT NULL DEFAULT 0,
		PRIMARY KEY (id, fhasta)
);

ALTER TABLE IF EXISTS EVA.DEPARTAMENTOS
    OWNER to postgres;




CREATE TABLE EVA.EVENTOS (
    ID INTEGER GENERATED ALWAYS AS IDENTITY UNIQUE,
    TITULO VARCHAR(200) NOT NULL,
    FEVENTO DATE NOT NULL,
    OBSERVACION VARCHAR(500),
    ESTADO VARCHAR(10) NOT NULL DEFAULT 'ACTIVO',
	FHASTA TIMESTAMP NOT NULL DEFAULT '2999-12-31 00:00:00',
    FDESDE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	VERSION INTEGER NOT NULL DEFAULT 0,
    CONSTRAINT ESTADO_VALIDO CHECK (ESTADO IN ('ACTIVO', 'CERRADO'))
);

ALTER TABLE IF EXISTS EVA.EVENTOS
    OWNER to postgres;

CREATE TABLE EVA.EVENTOPARTICIPANTES (
    ID INTEGER GENERATED ALWAYS AS IDENTITY,
    EVENTO_ID INTEGER NOT NULL REFERENCES EVA.EVENTOS(ID),
    PARTICIPANTE_ID VARCHAR(50) NOT NULL REFERENCES EVA.USUARIOS(USUARIO),
    PRIMARY KEY (EVENTO_ID, PARTICIPANTE_ID)
);

ALTER TABLE IF EXISTS EVA.EVENTOPARTICIPANTES
    OWNER to postgres;

CREATE TABLE EVA.EVALUACIONES (
	EVENTO_ID INTEGER NOT NULL REFERENCES EVA.EVENTOS(ID),
    FEVALUACION DATE NOT NULL,    
    EVALUADOR_ID VARCHAR(50) NOT NULL REFERENCES EVA.USUARIOS(USUARIO),
    EVALUADO_ID VARCHAR(50) NOT NULL REFERENCES EVA.USUARIOS(USUARIO),
	CRITERIO1 INTEGER CHECK ( CRITERIO1 BETWEEN 0 AND 10),
	CRITERIO2 INTEGER CHECK ( CRITERIO2 BETWEEN 0 AND 10),
	CRITERIO3 INTEGER CHECK ( CRITERIO3 BETWEEN 0 AND 10),
	CRITERIO4 INTEGER CHECK ( CRITERIO4 BETWEEN 0 AND 10),
	CRITERIO5 INTEGER CHECK ( CRITERIO5 BETWEEN 0 AND 10),
	CRITERIO6 INTEGER CHECK ( CRITERIO6 BETWEEN 0 AND 10),
	CRITERIO7 INTEGER CHECK ( CRITERIO7 BETWEEN 0 AND 10),
	CRITERIO8 INTEGER CHECK ( CRITERIO8 BETWEEN 0 AND 10),
	CRITERIO9 INTEGER CHECK ( CRITERIO9 BETWEEN 0 AND 10),
	CRITERIO10 INTEGER CHECK ( CRITERIO10 BETWEEN 0 AND 10),
	COMENTARIO VARCHAR(1000) NOT NULL,
    CONSTRAINT sin_autoevaluacion CHECK (EVALUADOR_ID <> EVALUADO_ID),
	PRIMARY KEY (FEVALUACION, EVENTO_ID, EVALUADOR_ID, EVALUADO_ID)
);

ALTER TABLE IF EXISTS EVA.EVALUACIONES
    OWNER to postgres;
	
	
CREATE TABLE CRITERIOS_DETALLE (
	ID INTEGER GENERATED ALWAYS AS IDENTITY,
	DESCRIPCION VARCHAR(50) NOT NULL,
	FHASTA TIMESTAMP NOT NULL DEFAULT '2999-12-31 00:00:00',
    FDESDE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	VERSION INTEGER NOT NULL DEFAULT 0
);

ALTER TABLE IF EXISTS EVA.CRITERIOS_DETALLE
    OWNER to postgres;

-- CREATE INDEX IDX_EVAL_REUNION ON EVA.EVALUACIONES(EVENTO_ID);
-- CREATE INDEX IDX_EVAL_EVALUADO ON EVA.EVALUACIONES(EVALUADO_ID);